<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[页面布局]]></title>
    <url>%2FJoanna.github.io%2F2019%2F02%2F22%2F%E4%B8%80%E9%9D%A2%E4%BA%8C%E9%9D%A2%2F</url>
    <content type="text"><![CDATA[页面布局题目1、假设高度已知，请写出三栏布局，其中左栏、右栏宽度各为300px，中间自适应2、页面布局的变通2.1、三栏布局 左右宽度固定，中间自适应 上下高度固定，中间自适应 2.2、两栏布局 左宽度固定，右自适应 右宽度固定，左自适应 上宽度固定，下自适应 下宽度固定，上自适应 浮动1、伪元素清理浮动12345.clearfix::after &#123; content: &quot;&quot;; display: block; clear: both;&#125; 2、伪元素清理浮动和margin1234567.clearfix::before, .clearfix::after &#123; content: &quot;&quot;; display: table;&#125;.clearfix::after &#123; clear: both;&#125; 页面布局小结 语义化掌握到位 页面布局理解深刻 CSS基础知识扎实 思维灵活且积极上进（掌握grid知识） 代码书写规范 CSS 盒模型题目1、谈谈你对CSS盒模型的认识1.1、基本概念：标准模型 + IE模型1.2、标准模型 和 IE模型 区别 （高度和宽度如何计算） 在标准模式下的盒模型，盒子实际内容（content）的width/height=我们设置的width/height；在怪异模式下的盒模型，盒子的（content）宽度+内边距padding+边框border宽度=我们设置的width(height也是如此) 1.3、CSS如何设置这两种模型 box-sizing: content-box; (浏览器默认) box-sizing: border-box; 1.4、JS如何设置获取盒模型对应的宽和高 dom.style.width/height (仅能获取内联样式的宽和高) dom.currentStyle.width/height (css渲染后的宽和高) window.getComputedStyle(dom).width/height (兼容性更好) dom.getBoundingClientRect().width/height 1.5、实例题（根据盒模型解释边距重叠） 边距重叠与BFC1.6、BFC BFC的基本概念 BFC的原理 如何创建BFC BFC的使用场景 DOM 事件DOM 事件的级别 DOM0 element.onclick=function(){} DOM2 element.addEventListener(‘click’, function(){}, false) DOM3 element.addEventListener(‘keyup’, function(){}, false) 增加了事件类型，比如鼠标事件、键盘事件 DOM 事件模型 捕获 从上往下(true) 冒泡 从当前元素往上(默认)(false) DOM 事件流 浏览器在为当前这个页面、与用户作出交互的过程中，比如点击鼠标左键，左键是如何传到页面上（如何响应） 事件流指的是事件从捕获、处于目标、事件冒泡三个阶段：捕获；事件通过捕获到达目标元素；从目标元素上传到window对象 DOM 事件捕获的具体流程window -&gt; document -&gt; html -&gt; body -&gt; 父级元素 -&gt; 子元素 -&gt; 目标元素 Event 对象的常见应用event.preventDefault() 阻止默认事件event.stopPropagation() 阻止冒泡行为event.stopImmediatePropagation() 阻止剩余的事件处理函数的执行，并防止当前事件在DOM树上冒泡event.currentTarget 返回绑定事件的元素event.target 返回触发事件的元素 自定义事件 Event CustomEvent12345var eve = new Event(&apos;custom&apos;);ev.addEventListener(&apos;custome&apos;, function()&#123; console.log(&apos;custome&apos;);&#125;);ev.dispatchEvent(eve); 补充DOM 增删改查 获取父节点： document.getElementById(‘app’).parentNode; 获取兄弟节点： 下一个 dom.nextElementSibling || dom.nextSibling; 上一个 dom.previousElementSibling || dom.previousSibling 第一个 dom.firstElementChild || dom.firstChild 最后一个 dom.lastElementChild || dom.lastChild 所有子节点： dom.children; 创建节点： newChild = document.createElement(‘newDom’); 插入节点： 在当前dom节点的最后插入 dom.appendChild(‘newChild’)在dom节点下、插入到dom1节点前 dom.insertBefore(newChild, dom1) 删除节点： dom.removeChild(childNode); dom.remove(); // 直接删掉dom节点 DOM 节点属性 获取：getAttribute(名称) 设置：setAttribute(名称，值) 删除：removeAttribute(名称) 类型转换数据类型原始类型：Boolean Null Undefined Number String Symbol(ES6新增)对象：Object 显示类型转换 Number函数 数值：转换后还是原来的值； 字符串：如果可以被解析为数值，则转换为相应的数值，否则得到NaN；空字符串转换为0 布尔值：true 转成 1，false 转成 0； undefined：转成NaN； null：转成 0； 对象：先调用对象自身的valueOf()方法，如果该方法返回原始类型的值（数值、字符串和布尔值），则直接对该值使用Number方法，不再进行后续步骤；如果valueOf方法返回复合类型的值，再调用对象自身的toString方法，如果toString方法返回原始类型的值，则对该值使用Number方法，不再进行后续步骤；如果toString方法返回的是复合类型的值，则报错；显示类型转换 String函数 数值：转为相应的字符串； 字符串：转换后还是原来的值 布尔值：true 转为“true”，false转为“false”； undefined：转为“undefined”； null：“null” 对象：先调用toString方法，如果该方法返回原始类型的值（数值、字符串和布尔值），则对该值使用String方法，不再进行后续步骤；如果toString方法返回复合类型的值，再调用valueOf方法，如果valueOf方法返回原始类型的值，则对该值使用String方法，不再进行后续步骤；如果valueOf方法返回的是复合类型的值，则报错；显示类型转换 Boolean函数 undefined null -0 +0 NaN ‘’(空字符串)：均转成false {}(空对象) ：均转成true 隐式类型转换常见题目：[]+[] []+{} {}+[] {}+{} true+true 1+{a:1} 四则运算 判断语句 native 调用 typeOf 与 instanceOfHTTP 协议面向对象原型链通信跨域通信、基本的前后端通信 安全CSRF charXS 算法]]></content>
      <tags>
        <tag>一面</tag>
        <tag>二面</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[面试准备]]></title>
    <url>%2FJoanna.github.io%2F2019%2F02%2F22%2F%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87%2F</url>
    <content type="text"><![CDATA[职位描述（JD）分析1、查看JD确定是否是自己感兴趣的工作2、确认自己的能力能否hold住JD的要求 业务分析或实战模拟1、打开该公司的PC端和客户端的网页，分析所需要的技能；比如css3动画，导航组件、页面布局、框架工具等 chrome开发者工具 技术栈准备1、准备哪些前端知识 jQuery（核心架构是什么？事件委托怎么做的？插件机制是什么？兼容性）看浏览量最高的博客 vue react angular 熟悉原理，多看实战项目，了解源码2、与前端工程相关的 预编译sass、打包webpack、环境搭建、构建、安装包、npm常见命令 把JS在上线之前进行处理 自我介绍1、简历 基本信息，姓名-年龄-手机-邮箱-籍贯 学历 工作经历，时间-公司-岗位-职责-技术栈-业绩 开源项目， Github 和说明2、自我陈述 把握面试的沟通方向 豁达、自信的适度发挥3、面试技巧 准备要充分 知识要系统 沟通要简洁 内心要诚实 态度要谦虚 回答要灵活]]></content>
      <tags>
        <tag>面试准备</tag>
      </tags>
  </entry>
</search>
